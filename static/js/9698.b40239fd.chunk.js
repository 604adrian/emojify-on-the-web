"use strict";(self.webpackChunkweb_emojify=self.webpackChunkweb_emojify||[]).push([[9698],{740:(e,a,t)=>{t.d(a,{TextDrawer:()=>s,h:()=>n});var i=t(4709);const n=["text","character","char","multiline-text"];class s{async draw(e){const{drawText:a}=await t.e(6080).then(t.bind(t,6080));a(e)}async init(e){const a=e.actualOptions;if(n.find((e=>(0,i.dB)(e,a.particles.shape.type)))){const e=n.map((e=>a.particles.shape.options[e])).find((e=>!!e)),t=[];(0,i.KH)(e,(e=>{t.push((0,i.mx)(e.font,e.weight))})),await Promise.all(t)}}async particleInit(e,a){if(!a.shape||!n.includes(a.shape))return;const t=a.shapeData;if(void 0===t)return;const s=t.value;void 0!==s&&(a.text=(0,i.wA)(s,a.randomIndexData),await Promise.resolve())}}},9698:(e,a,t)=>{t.d(a,{loadTextShape:()=>n});var i=t(740);async function n(e){let a=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const{TextDrawer:n}=await Promise.resolve().then(t.bind(t,740));await e.addShape(i.h,new n,a)}}}]);
//# sourceMappingURL=9698.b40239fd.chunk.js.map